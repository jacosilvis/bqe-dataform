config {
  type: "table",
  schema: dataform.projectConfig.vars.TARGET_DATA,
  dependencies: ["jobs_timeline"],
  bigquery: {
    partitionBy: "DATE(usage_time_min)",
    clusterBy: ["reservation_id"]
  },
  assertions: {
    uniqueKey: ["bq_region", "reservation_id", "usage_time_min"]
  },
  tags: ["TRANSFORM_DATA"]
}


SELECT
    bq_region
  , reservation_id
  , usage_time_min
  , SUM(usage_slot_ms) AS total_usage_slot_ms
  , SUM(total_bytes_processed) AS total_bytes_processed
  , SUM(total_bytes_billed) AS total_bytes_billed
  , CAST(ROUND(CEIL(MAX(usage_slot_ms) / 100000) * 100) AS INT64) AS max_slots_per_min
  , ARRAY_AGG(usage_slot_ms ORDER BY usage_time_sec ASC) AS usage_slot_ms
FROM (SELECT
          bq_region
        , COALESCE(reservation_id, "On-Demand") AS reservation_id
        , TIMESTAMP_TRUNC(period_start, SECOND) AS usage_time_sec
        , TIMESTAMP_TRUNC(period_start, MINUTE) AS usage_time_min
        , IFNULL(SUM(period_slot_ms), 0) AS usage_slot_ms
        , IFNULL(SUM(total_bytes_processed), 0) AS total_bytes_processed
        , IFNULL(SUM(total_bytes_billed), 0) AS total_bytes_billed
      FROM ${ ref({ schema: dataform.projectConfig.vars.TARGET_DATA, name: "jobs_timeline" }) }
      GROUP BY bq_region
             , reservation_id
             , usage_time_sec
             , usage_time_min) AS dt1
GROUP BY bq_region
       , reservation_id
       , usage_time_min
